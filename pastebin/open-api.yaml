openapi: 3.0.1
info:
  title: OpenAPI definition for Pastebin
  version: v1
servers:
- url: http://localhost:8081
  description: New paste creation
- url: http://localhost:8080
  description: Paste resolution
- url: http://localhost:80
  description: Load-balancer entrypoint
paths:
  /v1/paste:
    post:
      summary: Create a new paste
      parameters: 
        - name: ApiKey
          in: header
          description: API key for traffic shaping
          required: true
          allowEmptyValue: false
          schema: 
            type: string
      operationId: paste
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Paste'
      responses:
        '201':
          description: Paste successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
                    description: Unique ID of the created paste.
          links:
            getPaste:  
              operationRef: '#/paths/v1/paste/{uuid}/get'
              parameters:
                uuid: '$response.body#/uuid'
              description: >
                The `uuid` value returned in the response can be used as
                the `uuid` parameter in `GET /v1/paste/{uuid}`.
  /v1/paste/{uuid}:
    get:
      summary: Retrieve paste by unique ID
      operationId: getPaste
      parameters:
      - name: ApiKey
        in: header
        description: API key for traffic shaping
        required: true
        allowEmptyValue: false
        schema: 
          type: string
      - name: uuid
        in: path
        description: Paste's unique ID
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Paste retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paste'
          links:
            getUser:
              operationRef: '#/paths/v1/user/{name}/get'
              parameters:
                name: '$response.body#/userName'
              description: >
                The `userName` value returned in the paste can be used as
                the `name` parameter in `GET /v1/user/{name}/get`.
        "404":
          description: Paste not found
components:
  schemas:
    Paste:
      type: object
      required: [content]
      properties:
        uuid:
          type: string
          description: The unique ID of the paste.
        content:
          type: string
          description: The textual content of the paste.
        title:
          type: string
          description: An optional title for the paste.
        alias:
          type: string
          description: The alias of the paste that becomes part of the URL.
        userName:
          type: string
        expiry:
          type: integer
          description: The expiry in unix time stamp.
    User:
      type: object
      required: [name]
      properties: 
        name:
          type: string
